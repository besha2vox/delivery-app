{"version":3,"file":"static/js/315.c9593218.chunk.js","mappings":"kMAAO,IAAMA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,EAEtBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,WAAhB,EAEzBC,EAAsB,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,SAAhB,C,sECF3BC,E,QAAMC,GAAAA,OAAH,wZ,UCoBhB,EAnBe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KACrC,OAAKA,GAQE,SAACJ,EAAD,CAAKI,KAAMA,EAAX,SAAkBF,KANrB,SAACF,EAAD,CAAKI,KAAK,SAASC,QAASF,EAA5B,SACGD,GAMR,C,qJCbYI,EAAa,SAACb,GAAD,OAAWA,EAAMc,KAAKZ,KAAtB,EAIba,EAAsB,SAACf,GAAD,OAAWA,EAAMc,KAAKR,SAAtB,E,2DCFtBU,EAAiBR,EAAAA,GAAAA,GAAH,sZAuBdS,EAAWT,EAAAA,GAAAA,GAAH,8WAiBRU,EAAYV,EAAAA,GAAAA,GAAH,iIAQTW,EAAeX,EAAAA,GAAAA,IAAH,+H,UCiBzB,EAlDiB,WACf,IAAQY,GAAaC,EAAAA,EAAAA,MAAbD,SACFN,GAAOQ,EAAAA,EAAAA,IAAYT,GACnBT,GAAckB,EAAAA,EAAAA,IAAYnB,EAAAA,IAE1BG,GAAYgB,EAAAA,EAAAA,IAAYP,GACxBQ,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,iFACTtB,EADS,iEAGRmB,GACJI,EAAAA,EAAAA,GAAc,CACZP,SAAAA,EACAQ,KAAMxB,EAAYyB,OANR,2CAAH,qDAUbH,GACD,GAAE,CAACN,EAAUhB,EAAamB,IAM3B,OACE,iCACE,SAACP,EAAD,UACGF,EAAKgB,KAAI,gBAAGD,EAAH,EAAGA,IAAKE,EAAR,EAAQA,KAAmBC,GAA3B,EAAcC,YAAd,EAA2BD,OAAOE,EAAlC,EAAkCA,MAAON,EAAzC,EAAyCA,KAAzC,OACR,UAACX,EAAD,YACE,gBAAKkB,QAAQ,OAAOC,IAAKJ,EAAOK,IAAKN,KACrC,SAACb,EAAD,UAAYa,KACZ,UAACZ,EAAD,YACE,yBAAG,6BAAOe,EAAM,aAChB,SAACI,EAAA,EAAD,CACE7B,KAAK,wCACLC,cAAe,kBAfH6B,EAgBQ,CAAEV,IAAAA,EAAKE,KAAAA,EAAMC,MAAAA,EAAOE,MAAAA,EAAON,KAAAA,QAf3DL,GAASiB,EAAAA,EAAAA,IAAUD,IADK,IAAAA,CAeG,SAPNV,EADP,MAgBXvB,IAAa,SAACmC,EAAA,EAAD,MAGnB,C","sources":["redux/shops/selectors.js","shared/components/Button/Button.styled.jsx","shared/components/Button/Button.jsx","redux/menu/selectors.js","shared/components/DishList/DishList.styled.jsx","shared/components/DishList/DishList.jsx"],"sourcesContent":["export const selectAllShops = state => state.shops.items;\n\nexport const selectCurrentShop = state => state.shops.currentShop;\n\nexport const selectShopIsLoading = state => state.shops.isLoading;\n\nexport const selectShopError = state => state.shops.error;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px 10px;\n\n  font-weight: 700;\n  border-radius: 40px;\n  color: #f09440;\n  border: 1px solid #f09440;\n\n  transition-property: color, background-color;\n  transition-duration: 300ms;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    color: #fff;\n    background-color: #f09440;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ text, hendleClicker, type }) => {\n  if (!type) {\n    return (\n      <Btn type=\"button\" onClick={hendleClicker}>\n        {text}\n      </Btn>\n    );\n  }\n\n  return <Btn type={type}>{text}</Btn>;\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  hendleClicker: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nexport default Button;\n","export const selectMenu = (state) => state.menu.items;\n\nexport const selectCurrentDish = (state) => state.menu.currentDish;\n\nexport const selectMenuIsLoading = (state) => state.menu.isLoading;\n\nexport const selectMenuError = (state) => state.menu.error;\n","import styled from 'styled-components';\n\nexport const DishListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  width: 80%;\n  height: fit-content;\n  max-height: 100%;\n  overflow: auto;\n  padding: 0 12px;\n  @media screen and (min-width: 768px) {\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #2e2e2e70;\n    border-radius: 2px;\n  }\n`;\n\nexport const DishItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 8px;\n  gap: 8px;\n  width: 100%;\n  border-radius: 30px;\n  box-shadow: 2px 2px 7px rgba(116, 177, 232, 0.24);\n  text-align: center;\n  background-color: #fff;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 2 * 12px) / 2);\n  }\n`;\n\nexport const DishTitle = styled.h3`\n  padding: 0 4px;\n  font-size: 16px;\n  @media screen and (min-width: 768px) {\n    flex-grow: 1;\n  }\n`;\n\nexport const PriceWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 0 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getByCategory } from '../../../redux/menu/operations';\nimport { selectMenu, selectMenuIsLoading } from '../../../redux/menu/selectors';\nimport { selectCurrentShop } from '../../../redux/shops/selectors';\nimport { addToCart } from 'redux/cart/operations';\n\nimport Loader from '../Loader/Loader';\nimport Button from '../Button/Button';\nimport {\n  DishListStyled,\n  DishItem,\n  DishTitle,\n  PriceWrapper,\n} from './DishList.styled';\n\nconst DishList = () => {\n  const { category } = useParams();\n  const menu = useSelector(selectMenu);\n  const currentShop = useSelector(selectCurrentShop);\n\n  const isLoading = useSelector(selectMenuIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getMenu = async () => {\n      if (!currentShop) return;\n\n      await dispatch(\n        getByCategory({\n          category,\n          shop: currentShop._id,\n        })\n      );\n    };\n    getMenu();\n  }, [category, currentShop, dispatch]);\n\n  const handleButtonClick = data => {\n    dispatch(addToCart(data));\n  };\n\n  return (\n    <>\n      <DishListStyled>\n        {menu.map(({ _id, name, description, image, price, shop }) => (\n          <DishItem key={_id}>\n            <img loading=\"lasy\" src={image} alt={name} />\n            <DishTitle>{name}</DishTitle>\n            <PriceWrapper>\n              <p>Ціна: {price}₴</p>\n              <Button\n                text=\"У кошик\"\n                hendleClicker={() =>\n                  handleButtonClick({ _id, name, image, price, shop })\n                }\n              />\n            </PriceWrapper>\n          </DishItem>\n        ))}\n      </DishListStyled>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default DishList;\n"],"names":["selectAllShops","state","shops","items","selectCurrentShop","currentShop","selectShopIsLoading","isLoading","Btn","styled","text","hendleClicker","type","onClick","selectMenu","menu","selectMenuIsLoading","DishListStyled","DishItem","DishTitle","PriceWrapper","category","useParams","useSelector","dispatch","useDispatch","useEffect","getMenu","getByCategory","shop","_id","map","name","image","description","price","loading","src","alt","Button","data","addToCart","Loader"],"sourceRoot":""}