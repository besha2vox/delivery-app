{"version":3,"file":"static/js/112.be61f35d.chunk.js","mappings":"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","sources":["shared/components/ShopList/ShopList.styled.jsx","shared/components/ShopList/ShopList.jsx","shared/components/DropDownButton/DropDownButton.styled.jsx","shared/components/DropDownButton/DropDownButton.jsx","pages/ShopsPage/ShopsPage.styled.jsx","pages/ShopsPage/ShopsPage.jsx","redux/shops/selectors.js","shared/components/ButtonImage/ButtonImage.styled.jsx","shared/components/ButtonImage/ButtonImage.jsx","shared/components/Title/Title.styled.jsx","shared/components/Title/Title.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ShopsList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n`;\n\nexport const ShopItem = styled.li`\n    display: flex;\n    justify-content: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getShops } from '../../../redux/shops/operations';\nimport {\n  selectAllShops,\n  selectShopIsLoading,\n} from '../../../redux/shops/selectors';\nimport { selectCurrentShop } from 'redux/cart/selectors';\n\nimport Loader from '../Loader/Loader';\nimport ButtonImage from '../ButtonImage/ButtonImage';\nimport { ShopsList, ShopItem } from './ShopList.styled';\n\nconst ShopList = ({ setIsDropDawnOpen }) => {\n  const shops = useSelector(selectAllShops);\n  const currentShop = useSelector(selectCurrentShop);\n  const isLoading = useSelector(selectShopIsLoading);\n  const dispatch = useDispatch();\n\n  console.log({ currentShop });\n\n  useEffect(() => {\n    dispatch(getShops());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!!shops && (\n        <ShopsList>\n          {shops.map(({ name, logo, _id, categories }) => (\n            <ShopItem key={_id}>\n              <ButtonImage\n                handleClicler={() => setIsDropDawnOpen(false)}\n                isDisabled={currentShop !== _id && currentShop !== null}\n                path={_id}\n                name={name}\n                logo={logo}\n              />\n            </ShopItem>\n          ))}\n        </ShopsList>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nShopList.propTypes = {\n  setIsDropDawnOpen: PropTypes.func.isRequired,\n};\n\nexport default ShopList;\n","import styled from 'styled-components';\n\nexport const DropButton = styled.button`\n  position: absolute;\n  top: 50px;\n  right: -56px;\n  transform: rotate(90deg);\n  padding: 2px 8px;\n\n  width: fit-content;\n  height: fit-content;\n\n  border-top-right-radius: 15px;\n  border-top-left-radius: 15px;\n  background-color: #ac6c30;\n  color: #ffffff;\n`;\n","import PropTypes from 'prop-types';\n\nimport { DropButton } from './DropDownButton.styled';\n\nconst DropDownButton = ({ text, habdleClicker }) => {\n  return <DropButton onClick={habdleClicker}>{text}</DropButton>;\n};\n\nDropDownButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  habdleClicker: PropTypes.func.isRequired,\n};\n\nexport default DropDownButton;\n","import styled from 'styled-components';\n\nexport const ShoptWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  height: 100%;\n  overflow: hidden;\n  background-color: #fdf9f6;\n  border-radius: 30px;\n  box-shadow: 7px 7px 14px #2e2e2e24, -7px -7px 14px #2e2e2e24;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ShopAside = styled.aside`\n  padding: 12px;\n\n  width: 100%;\n\n  text-align: center;\n  border-radius: 30px;\n  background-color: inherit;\n\n  @media screen and (min-width: 768px) {\n    max-width: fit-content;\n    height: 100%;\n  }\n\n  &.mobile-hidden {\n    transform: translateX(-100%);\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n\n    transition: transform 300ms ease-in-out;\n    &.active {\n      transform: translateX(0);\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    box-shadow: 7px 7px 14px #2e2e2e24;\n  }\n`;\n\nexport const ShopSection = styled.section`\n  padding: 12px;\n  width: 100%;\n  height: 100%;\n\n  border-radius: 30px;\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport ShopList from '../../shared/components/ShopList/ShopList';\nimport Title from '../../shared/components/Title/Title';\nimport DropDownButton from 'shared/components/DropDownButton/DropDownButton';\nimport { ShoptWrapper, ShopAside, ShopSection } from './ShopsPage.styled';\n\nconst Shops = () => {\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\n  const [isDropDawnOpen, setIsDropDawnOpen] = useState(false);\n  const [asideClasses, serAsideClasses] = useState('');\n  const { shopId } = useParams();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setViewportWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (viewportWidth >= 1280) {\n      serAsideClasses('');\n    }\n\n    if (shopId && viewportWidth < 1280) {\n      serAsideClasses('mobile-hidden');\n\n      if (isDropDawnOpen) {\n        serAsideClasses(prevState => prevState.concat(' active'));\n      }\n    }\n  }, [isDropDawnOpen, shopId, viewportWidth]);\n\n  const toggleDropDown = () => {\n    setIsDropDawnOpen(prevState => !prevState);\n  };\n\n  const closeDropDown = e => {\n    if (e.target !== e.currentTarget) return;\n\n    setIsDropDawnOpen(false);\n  };\n\n  return (\n    <ShoptWrapper>\n      <ShopAside className={asideClasses} onClick={closeDropDown}>\n        {shopId && viewportWidth < 1280 && (\n          <DropDownButton text=\"Магазини\" habdleClicker={toggleDropDown} />\n        )}\n        <Title title=\"Магазини:\" />\n        <ShopList setIsDropDawnOpen={setIsDropDawnOpen} />\n      </ShopAside>\n      <ShopSection>\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </ShopSection>\n    </ShoptWrapper>\n  );\n};\n\nexport default Shops;\n","export const selectAllShops = state => state.shops.items;\n\nexport const selectCurrentShop = state => state.shops.currentShop;\n\nexport const selectShopIsLoading = state => state.shops.isLoading;\n\nexport const selectShopError = state => state.shops.error;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ImageNavLink = styled(NavLink)`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: start;\n  gap: 8px;\n  padding: ${({ isNameShow }) => (isNameShow ? '4px 8px' : '8px')};\n\n  border-radius: 40px;\n  background-color: #fdf9f6;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  transition-property: box-shadow, background-color, color;\n  transition-duration: 300ms;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    box-shadow: 7px 13px 14px rgba(116, 177, 232, 0.24);\n  }\n\n  &.active {\n    background-color: #f09440;\n    color: #fdf9f6;\n  }\n\n  & img {\n    max-height: 40px;\n    border-radius: 50%;\n  }\n\n  background-color: ${({ isDisabled, disabled }) =>\n    disabled ? '#2e2e2e60' : 'inherit'};\n`;\n","import PropTypes from 'prop-types';\n\nimport { ImageNavLink } from './ButtonImage.styled';\n\nconst ButtonImage = ({\n  path,\n  logo,\n  name,\n  handleClicler,\n  isNameShow = true,\n  isDisabled = false,\n}) => {\n  const handleClick = event => {\n    if (isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    handleClicler();\n  };\n\n  return (\n    <ImageNavLink to={path} onClick={handleClick} disabled={isDisabled}>\n      <img src={logo} alt={name} />\n      {isNameShow && <h3>{name}</h3>}\n    </ImageNavLink>\n  );\n};\n\nButtonImage.propTypes = {\n  name: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  handleClicler: PropTypes.func,\n  isNameShow: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default ButtonImage;\n","import styled from 'styled-components';\n\nexport const TitleStyled = styled.h1`\n    font-size: 20px;\n    margin-bottom: 12px;\n    text-align: center;\n\n    @media screen and (max-width: 767px) {\n        margin: 0 auto 12px;\n        width: fit-content;\n        border-bottom: 1px solid #2e2e2e;\n    }\n`;\n","import PropTypes from 'prop-types';\n\nimport { TitleStyled } from './Title.styled';\n\nconst Title = ({ title }) => {\n    return <TitleStyled>{title}</TitleStyled>;\n};\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n"],"names":["ShopsList","styled","ShopItem","setIsDropDawnOpen","shops","useSelector","selectAllShops","currentShop","selectCurrentShop","isLoading","selectShopIsLoading","dispatch","useDispatch","console","log","useEffect","getShops","map","name","logo","_id","categories","ButtonImage","handleClicler","isDisabled","path","Loader","DropButton","text","habdleClicker","onClick","ShoptWrapper","ShopAside","ShopSection","useState","window","innerWidth","viewportWidth","setViewportWidth","isDropDawnOpen","asideClasses","serAsideClasses","shopId","useParams","handleResize","addEventListener","removeEventListener","prevState","concat","className","e","target","currentTarget","Title","title","Suspense","fallback","state","items","ImageNavLink","NavLink","isNameShow","disabled","to","event","preventDefault","src","alt","TitleStyled"],"sourceRoot":""}